#!/bin/bash

echo "🔍 Running pre-commit checks..."

# より高速なビルド設定を使用
DESTINATION='platform=iOS Simulator,name=iPhone 16'
BUILD_SETTINGS="-parallelizeTargets -jobs 8"
TEST_SETTINGS="-parallel-testing-enabled YES -maximum-concurrent-test-simulator-destinations 4"

# ビルドとテストを必ず実行（並列テスト実行）
echo "🧪 Running tests and build..."
# テスト結果のサマリーのみを表示（エラーがある場合は詳細も表示）
if ! xcodebuild -scheme HandEst -destination "$DESTINATION" $BUILD_SETTINGS $TEST_SETTINGS test -quiet 2>&1 | grep -E "(Test Suite|tests? (passed|failed)|error:|warning:|FAILED|Executed)" | tail -20; then
    echo "❌ Tests or build failed! Please fix the issues before committing."
    # エラーの詳細を表示するために再実行
    xcodebuild -scheme HandEst -destination "$DESTINATION" test 2>&1 | grep -A 5 -B 5 -E "(error:|FAILED)"
    exit 1
fi

# 純粋関数とReducerのテストカバレッジをチェック
echo "📊 Checking test coverage for pure functions and Reducers..."
if ! ./Scripts/check-test-coverage.swift; then
    echo ""
    echo "⚠️  警告: 純粋関数またはReducerのテストが不足しています"
    echo ""
    echo "TCAの原則に従い、以下は必ずテストを書いてください:"
    echo "  - Reducerのreduceメソッド"
    echo "  - public/internalな純粋関数"
    echo "  - 副作用のない計算処理"
    echo ""
    echo "このチェックをスキップしてコミットする場合は --no-verify を使用してください:"
    echo "  git commit --no-verify -m 'WIP: テスト追加予定'"
    echo ""
    exit 1
fi

echo "✅ All pre-commit checks passed!"
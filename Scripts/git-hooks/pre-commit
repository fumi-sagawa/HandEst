#!/bin/bash

echo "🔍 Running pre-commit checks..."

# より高速なビルド設定を使用
DESTINATION='platform=iOS Simulator,name=iPhone 16'
BUILD_SETTINGS="-parallelizeTargets -jobs 8"
TEST_SETTINGS="-parallel-testing-enabled YES -maximum-concurrent-test-simulator-destinations 4"

# ビルドとテストを必ず実行（並列テスト実行）
echo "🧪 Running tests and build..."
# テスト実行（エラーのみ表示する新しい方式）
if xcodebuild -scheme HandEst -destination "$DESTINATION" $BUILD_SETTINGS $TEST_SETTINGS test -quiet 2>&1 | tee test_output.log | grep -E "(error:|failed:|TEST FAILED|✗)"; then
    echo "❌ Tests or build failed! Please fix the issues before committing."
    rm -f test_output.log
    exit 1
else
    echo "✅ All tests passed!"
    rm -f test_output.log
fi

# SwiftLintチェック（エラーのみ表示）
echo "🧹 Running SwiftLint checks..."
if swiftlint lint --quiet 2>&1 | grep "error:"; then
    echo "❌ SwiftLint errors found! Please fix the issues before committing."
    exit 1
else
    echo "✅ No lint errors!"
fi

# 純粋関数とReducerのテストカバレッジをチェック
echo "📊 Checking test coverage for pure functions and Reducers..."
if ! ./Scripts/check-test-coverage.swift; then
    echo ""
    echo "⚠️  警告: 純粋関数またはReducerのテストが不足しています"
    echo ""
    echo "TCAの原則に従い、以下は必ずテストを書いてください:"
    echo "  - Reducerのreduceメソッド"
    echo "  - public/internalな純粋関数"
    echo "  - 副作用のない計算処理"
    echo ""
    echo "このチェックをスキップしてコミットする場合は --no-verify を使用してください:"
    echo "  git commit --no-verify -m 'WIP: テスト追加予定'"
    echo ""
    exit 1
fi

echo "✅ All pre-commit checks passed!"